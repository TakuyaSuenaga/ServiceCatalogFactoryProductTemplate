# Copyright 2025 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

# This template creates an EC2 instance for Service Catalog product deployment.
AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template creates an EC2 instance with a security group and IAM role for Service Catalog product deployment.

Parameters:
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID for the EC2 instance
    Default: ami-0c02fb55956c7d316  # Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type
    
  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
    Description: EC2 instance type
    
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    
  AllowedCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR block allowed to access the instance via SSH
    
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment name for tagging
    
  VolumeSize:
    Type: Number
    Default: 50
    MinValue: 8
    MaxValue: 16384
    Description: Size of the EBS volume in GB

Resources:
  # Security Group for EC2 instance
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Service Catalog EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AllowedCIDR
          Description: SSH access
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP access
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-instance-sg"
        - Key: Environment
          Value: !Ref Environment

  # IAM Role for EC2 instance
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: S3ReadOnlyAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-instance-role"
        - Key: Environment
          Value: !Ref Environment

  # Instance Profile
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  # EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref VolumeSize
            VolumeType: gp3
            Encrypted: true
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y aws-cli
          
          # Install CloudWatch agent
          yum install -y amazon-cloudwatch-agent
          
          # Create a simple web page
          cat > /var/www/html/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Service Catalog EC2 Instance</title>
          </head>
          <body>
              <h1>Welcome to Service Catalog EC2 Instance</h1>
              <p>Instance ID: ${AWS::StackName}</p>
              <p>Environment: ${Environment}</p>
              <p>Instance Type: ${InstanceType}</p>
              <p>Launch Time: $(date)</p>
          </body>
          </html>
          EOF
          
          # Start web server
          systemctl start httpd
          systemctl enable httpd
          
          # Configure CloudWatch agent
          /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl \
            -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-instance"
        - Key: Environment
          Value: !Ref Environment
        - Key: Service
          Value: ServiceCatalog

Outputs:
  InstanceId:
    Description: Instance ID of the EC2 instance
    Value: !Ref EC2Instance
    Export:
      Name: !Sub "${AWS::StackName}-InstanceId"
      
  InstancePublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-InstancePublicIP"
      
  InstancePrivateIP:
    Description: Private IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PrivateIp
    Export:
      Name: !Sub "${AWS::StackName}-InstancePrivateIP"
      
  WebURL:
    Description: URL to access the web page
    Value: !Sub "http://${EC2Instance.PublicIp}"
    Export:
      Name: !Sub "${AWS::StackName}-WebURL"
      
  SecurityGroupId:
    Description: Security Group ID of the EC2 instance
    Value: !Ref InstanceSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroupId"